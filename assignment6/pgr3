#include <stdio.h>
#define MAX_AMBULANCES 100
void selectionSort(int distances[], int n) {
    for (int i = 0; i < n - 1; i++) {
        int minIndex = i;
        for (int j = i + 1; j < n; j++) {
            if (distances[j] < distances[minIndex]) {
                minIndex = j;
            }
        }
        // Swap elements
        int temp = distances[minIndex];
        distances[minIndex] = distances[i];
        distances[i] = temp;
    }
}
void displayAmbulances(int distances[], int n) {
    printf("Sorted Ambulances by Distance (Ascending):\n");
    for (int i = 0; i < n; i++) {
        printf("Ambulance %d: Distance %d km\n", i + 1, distances[i]);
    }
}
void assignNearestAmbulance(int distances[], int n) {
    if (n > 0) { // Check if there are any ambulances
        printf("Nearest Ambulance Assigned: Distance %d km\n", distances[0]);
    } else {
        printf("No ambulances available.\n");
    }
}
int main() {
    int distances[MAX_AMBULANCES];
    int n;

    printf("Enter the number of ambulances (max %d): ", MAX_AMBULANCES);
    scanf("%d", &n);

    if (n <= 0 || n > MAX_AMBULANCES) {
        printf("Invalid number of ambulances. Please enter a value between 1 and %d.\n", MAX_AMBULANCES);
        return 1;
    }
    for (int i = 0; i < n; i++) {
        printf("Enter distance for Ambulance %d (in km): ", i + 1);
        scanf("%d", &distances[i]);
    }
    selectionSort(distances, n);
    displayAmbulances(distances, n);
    printf("\n");
    assignNearestAmbulance(distances, n);
    return 0;
}
